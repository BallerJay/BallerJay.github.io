<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>leetCode - Category - BallerJay&#39;s Blog</title>
        <link>https://ballerjay.github.io/categories/leetcode/</link>
        <description>leetCode - Category - BallerJay&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 19 May 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://ballerjay.github.io/categories/leetcode/" rel="self" type="application/rss+xml" /><item>
    <title>最长公共前缀</title>
    <link>https://ballerjay.github.io/posts/longestcommonprefix/</link>
    <pubDate>Thu, 19 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Summer</author>
    <guid>https://ballerjay.github.io/posts/longestcommonprefix/</guid>
    <description><![CDATA[leetcode-14-最长公共前缀 题目地址
题目描述 编写一个函数来查找字符串数组中过的最长公共前缀。
如果不存在公共前缀，返回空字符串“”。
示例 1:
输入：strs = [&#34;flower&#34;,&#34;flow&#34;,&#34;flight&#34;] 输出：&#34;fl&#34; 示例 2:
输入：strs = [&#34;dog&#34;,&#34;racecar&#34;,&#34;car&#34;] 输出：&#34;&#34; 解释：输入不存在公共前缀。 提示：
1 &lt;= strs.length &lt;= 200 0 &lt;= strs[i].length &lt;= 200 strs[i] 仅由小写英文字母组成 解题思路 获取字符串数组中的最长公共前缀，就是取出字符串中的每一个子字符一一进行对比，如果都相同，则比较下一位子字符，否则终止对比。
具体思路如下：
let curIndex = 0; 记录当前对比字符的下标 let curStr = &ldquo;&rdquo;; 记录当前比较的字符的值 let flag = true; 判断本次字符串比对是否全部相同 使用 while 循环，当 flag 为假时推出循环。 如果当前处理的是字符串数组中的第一个字符串，说明开始了一次新的循环，根据下标curIndex更新curStr。 否则通过curIndex获取当前的字符串和cueStr对比，如果不同，则flag = false推出循环。 如果处理到了字符串数组中的最后一个字符串，则说明本次循环成功，更新下标向后移一位。 当 while 循环结束时，说明已经获取到了第一个不满足条件的下标位置，根据curIndex截取第一个字符串。 代码实现 function longestComminPrefix(strs) { if (strs.length === 0) return &#34;&#34;; let len = strs.]]></description>
</item>
</channel>
</rss>
